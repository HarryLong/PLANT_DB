cmake_minimum_required(VERSION 2.8)
project(PlantDB)

set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake/Modules/")

find_package(Qt5Widgets 5.5 REQUIRED)
find_package(Qt5Core 5.5 REQUIRED)
find_package(Qt5Gui 5.5 REQUIRED)
find_package(sqlite3 5.5 REQUIRED)

set(LIBS ${LIBS} ${Qt5Widgets_LIBRARIES} ${Qt5Core_LIBRARIES} ${Qt5Gui_LIBRARIES} ${SQLITE3_LIBRARIES})
set(INCLUDE_DIRECTORIES ${Qt5Widgets_INCLUDE_DIRS} ${Qt5Core_INCLUDE_DIRS} ${Qt5Gui_INCLUDE_DIRS} ${SQLITE3_INCLUDE_DIRS})

set(CMAKE_AUTOMOC ON)

SET(CMAKE_CXX_FLAGS_RELWITHDEBINFO "${CMAKE_CXX_FLAGS_RELWITHDEBINFO} -O2 -g -DGL_DEBUG -std=c++11 -Wno-write-strings")
SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -O2 -std=c++11 -Wno-write-strings")
SET(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -O0 -g -DGL_DEBUG -std=c++11 -Wno-write-strings")

#SET(CMAKE_BUILD_TYPE DEBUG)
SET(CMAKE_BUILD_TYPE RELEASE)
#SET(CMAKE_BUILD_TYPE RELWITHDEBINFO)

include_directories(${INCLUDE_DIRECTORIES})

SET(CORE_SRC_FILES plant_db plant_properties settings)
SET(DB_EDITOR_SOURCE_FILES main plant_db_editor plant_db_editor_widgets main_window)
SET(API_HEADER_FILES plant_properties.h plant_db.h)

add_executable(PlantDB_Editor ${DB_EDITOR_SOURCE_FILES} ${CORE_SRC_FILES})
target_link_libraries(PlantDB_Editor ${LIBS})

add_library(PlantDB SHARED ${CORE_SRC_FILES})
target_link_libraries(PlantDB ${LIBS})

#INSTALL EXECUTABLE
install(TARGETS PlantDB_Editor
        RUNTIME DESTINATION bin
        CONFIGURATIONS RELEASE)

#INSTALL LIBRARY
install(TARGETS PlantDB
        LIBRARY DESTINATION lib
        CONFIGURATIONS RELEASE)

# INSTALL HEADER FILES
install(FILES ${API_HEADER_FILES}
        DESTINATION include/plantDB)

# SETUP CONFIGURATION FILE
SET(HOME_DIR $ENV{HOME})
set(CONFIG_FILE plantdb.conf)
file(WRITE ${CONFIG_FILE} "DB_LOCATION=${HOME_DIR}/.plantdb/PLANTDB.db")

# INSTALL CONFIGURATION FILES
install(FILES ${CONFIG_FILE}
        DESTINATION etc/plantDB)

# INSTAL BASE DB
#Create directory for db
install(DIRECTORY .plantdb
        DESTINATION ${HOME_DIR}
        FILE_PERMISSIONS OWNER_EXECUTE OWNER_WRITE OWNER_READ GROUP_EXECUTE GROUP_WRITE GROUP_READ WORLD_EXECUTE WORLD_WRITE WORLD_READ
        DIRECTORY_PERMISSIONS OWNER_EXECUTE OWNER_WRITE OWNER_READ GROUP_EXECUTE GROUP_WRITE GROUP_READ WORLD_EXECUTE WORLD_WRITE WORLD_READ)
